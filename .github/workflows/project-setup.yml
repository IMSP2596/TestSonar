name: Initialize Repository Components

on:
  push:
    paths:
      - README.md
      - package.json
      - sonar-projects.properties  # Trigger when any of these files are added or updated

jobs:
  initialize-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Pull latest changes
        run: |
          git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase      
      - name: Replace {{repo_name}} in README.md
        env:
          REPO_NAME: ${{ github.repository }}
        run: |
          if [ -f "README.md" ]; then
            sed -i "s/{{repo_name}}/${REPO_NAME##*/}/g" README.md
            echo "README.md file found. Updating."
          else
            echo "README.md file not found. Skipping."
          fi
      - name: Create flag file to mark initialization
        run: |
          mkdir -p .github
          echo "Initialized Readme" > .github/.readme-initialized
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git add README.md .github/.readme-initialized
          git commit -m "Initialize readme with repo name" || echo "No changes to commit."
          git push origin $(git rev-parse --abbrev-ref HEAD)

  initialize-package-json:
    needs: initialize-readme  # Run after the initialize-readme job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Pull latest changes
        run: |
          git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase
      - name: Check if package.json has been processed
        run: |
          if [ -f ".github/.initialized" ]; then
            echo "The repository has already been initialized."
            exit 1
          fi
      - name: Replace {{repo_name}} in package.json
        env:
          REPO_NAME: ${{ github.repository }}
        run: |
          sed -i "s/{{repo_name}}/${REPO_NAME##*/}/g" package.json
      - name: Create flag file to mark initialization
        run: |
          mkdir -p .github
          echo "Initialized" > .github/.initialized
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git add package.json .github/.initialized
          git commit -m "Initialize repository with repo name" || echo "No changes to commit."
          git push origin $(git rev-parse --abbrev-ref HEAD)

  initialize-sonar-properties:
    needs: initialize-package-json  # Run after the initialize-package-json job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Pull latest changes
        run: |
          git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase      
      - name: Replace {{repo_name}} in sonar-projects.properties
        env:
          REPO_NAME: ${{ github.repository }}
        run: |
          if [ -f "sonar-project.properties" ]; then
            sed -i "s/{{repo_name}}/${REPO_NAME##*/}/g" sonar-project.properties
            echo "sonar-project.properties file found. Updating."
          else
            echo "sonar-project.properties file not found. Skipping."
          fi
      - name: Create flag file to mark initialization
        run: |
          mkdir -p .github
          echo "Initialized sonar-project.properties" > .github/.sonar-project.properties-initialized
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git add sonar-project.properties .github/.sonar-project.properties-initialized
          git commit -m "Initialize sonar-project.properties with repo name" || echo "No changes to commit."
          git push origin $(git rev-parse --abbrev-ref HEAD)
